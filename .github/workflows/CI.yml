name: CI
on:
  pull_request:
  push:
    branches:
      - main
      - release-*
    tags: '*'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    timeout-minutes: 120
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ matrix.libEnzyme }} libEnzyme - assertions=${{ matrix.assertions }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.11'
        os:
          - ubuntu-24.04
        arch:
          - x64
        assertions:
          - true
        libEnzyme: [packaged]
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        if: ${{ ! matrix.assertions }}
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/checkout@v4
        if: ${{ matrix.assertions }}
        with:
          repository: 'JuliaLang/julia'
          ref: release-${{ matrix.version }}
          path: 'julia'
      - name: Compile Julia
        if: ${{ matrix.assertions }}
        run: |
          sed -i.bak 's/exit 2/exit 0/g' julia/deps/tools/jlchecksum
          make -C julia -j $(nproc) FORCE_ASSERTIONS=1 LLVM_ASSERTIONS=1 JULIA_PRECOMPILE=0
          echo $PWD/julia/usr/bin >> $GITHUB_PATH
      - uses: julia-actions/cache@v2
      - name: add EnzymeCore EnzymeTestUtils
        shell: julia --color=yes --project=. {0}
        run: |
          using Pkg
          Pkg.develop([PackageSpec(; path) for path in ("lib/EnzymeCore", "lib/EnzymeTestUtils")])
          Pkg.instantiate()
        if: ${{ matrix.version == '1.10' }}
        env:
          JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
      - name: Build libEnzyme
        if: ${{ matrix.libEnzyme == 'local' && matrix.os != 'macOS-latest'}}
        continue-on-error: ${{ matrix.version == 'nightly' }}
        id: build_libenzyme
        run: |
          julia --color=yes --project=deps -e 'using Pkg; Pkg.instantiate()'
          julia --color=yes --project=deps deps/build_local.jl
          cp LocalPreferences.toml test/
      - name: Build libEnzyme MacOS
        if: ${{ matrix.libEnzyme == 'local' && matrix.os == 'macOS-latest'}}
        continue-on-error: ${{ matrix.version == 'nightly' }}
        id: build_libenzyme_mac
        run: |
          julia --color=yes --project=deps -e 'using Pkg; Pkg.instantiate()'
          SDKROOT=`xcrun --show-sdk-path` julia --color=yes --project=deps deps/build_local.jl
          cp LocalPreferences.toml test/
      - uses: julia-actions/julia-buildpkg@v1
        if: matrix.version != 'nightly' || steps.build_libenzyme.outcome == 'success' || steps.build_libenzyme_mac.outcome == 'success'
        continue-on-error: ${{ matrix.version == 'nightly' }}
        id: buildpkg
        env:
          JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
      - uses: julia-actions/julia-runtest@v1
        if: matrix.version != 'nightly' || steps.buildpkg.outcome == 'success'
        continue-on-error: ${{ matrix.version == 'nightly' }}
        id: run_tests
        env:
          JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
      - uses: mxschmitt/action-tmate@v3
        if: ${{ !cancelled() }}
        with:
          limit-access-to-actor: false
